//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Dev/logical-motiv/libs/motiv-editor-react/src/lib/antlr/PropositionalLogic.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="PropositionalLogicParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IPropositionalLogicListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="PropositionalLogicParser.formula"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormula([NotNull] PropositionalLogicParser.FormulaContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PropositionalLogicParser.formula"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormula([NotNull] PropositionalLogicParser.FormulaContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PropositionalLogicParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] PropositionalLogicParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PropositionalLogicParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] PropositionalLogicParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PropositionalLogicParser.conditionalOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionalOrExpression([NotNull] PropositionalLogicParser.ConditionalOrExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PropositionalLogicParser.conditionalOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionalOrExpression([NotNull] PropositionalLogicParser.ConditionalOrExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PropositionalLogicParser.conditionalAndExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionalAndExpression([NotNull] PropositionalLogicParser.ConditionalAndExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PropositionalLogicParser.conditionalAndExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionalAndExpression([NotNull] PropositionalLogicParser.ConditionalAndExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PropositionalLogicParser.orExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrExpression([NotNull] PropositionalLogicParser.OrExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PropositionalLogicParser.orExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrExpression([NotNull] PropositionalLogicParser.OrExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PropositionalLogicParser.xorExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterXorExpression([NotNull] PropositionalLogicParser.XorExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PropositionalLogicParser.xorExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitXorExpression([NotNull] PropositionalLogicParser.XorExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PropositionalLogicParser.andExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAndExpression([NotNull] PropositionalLogicParser.AndExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PropositionalLogicParser.andExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAndExpression([NotNull] PropositionalLogicParser.AndExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PropositionalLogicParser.notExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNotExpression([NotNull] PropositionalLogicParser.NotExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PropositionalLogicParser.notExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNotExpression([NotNull] PropositionalLogicParser.NotExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PropositionalLogicParser.proposition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProposition([NotNull] PropositionalLogicParser.PropositionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PropositionalLogicParser.proposition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProposition([NotNull] PropositionalLogicParser.PropositionContext context);
}
